DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(6/CallSiteScope { fn_id: 14, body_id: 23 }), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(6/CallSiteScope { fn_id: 14, body_id: 23 }))
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(7/ParameterScope { fn_id: 14, body_id: 23 }), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(7/ParameterScope { fn_id: 14, body_id: 23 }))
DEBUG:rustc_mir::build::matches: declare_binding(var_id=16, name=ex1(5674), var_ty=Example, var_scope_id=ScopeId(1), span=issue-33567.rs:15:12: 15:15)
DEBUG:rustc_mir::build::matches: declare_binding: index=0
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb0, bindings=[Binding { span: issue-33567.rs:15:12: 15:15, source: arg0, name: ex1(5674), var_id: 16, var_ty: Example, mutability: Not, binding_mode: ByValue }])
DEBUG:rustc_mir::build::cfg: push(bb0, var0 = arg0)
DEBUG:rustc_mir::build::matches: declare_binding(var_id=19, name=ex2(5675), var_ty=Example, var_scope_id=ScopeId(1), span=issue-33567.rs:15:26: 15:29)
DEBUG:rustc_mir::build::matches: declare_binding: index=1
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb0, bindings=[Binding { span: issue-33567.rs:15:26: 15:29, source: arg1, name: ex2(5675), var_id: 19, var_ty: Example, mutability: Not, binding_mode: ByValue }])
DEBUG:rustc_mir::build::cfg: push(bb0, var1 = arg1)
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(11/Misc(23)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(11/Misc(23)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb0, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:5: 25:6, kind: Scope { extent: CodeExtent(12/Misc(24)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:5: 25:6, kind: Match { discriminant: Hair(expr(25: (ex1, ex2))), arms: [Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:17:9: 17:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:17:10: 17:11, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:17:13: 17:14, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(31: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:18:9: 18:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:18:10: 18:11, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:18:13: 18:14, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(35: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:19:9: 19:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:19:10: 19:11, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:19:13: 19:14, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(39: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:20:9: 20:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:20:10: 20:11, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:20:13: 20:14, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(43: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:21:9: 21:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:21:10: 21:11, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:21:13: 21:14, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(47: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:22:9: 22:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:22:10: 22:11, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:22:13: 22:14, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(51: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:23:9: 23:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:23:10: 23:11, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:23:13: 23:14, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(55: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:24:9: 24:10, kind: Wild }], guard: None, body: Hair(expr(57: false)) }] } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(12/Misc(24)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(12/Misc(24)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb0, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:5: 25:6, kind: Match { discriminant: Hair(expr(25: (ex1, ex2))), arms: [Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:17:9: 17:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:17:10: 17:11, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:17:13: 17:14, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(31: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:18:9: 18:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:18:10: 18:11, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:18:13: 18:14, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(35: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:19:9: 19:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:19:10: 19:11, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:19:13: 19:14, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(39: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:20:9: 20:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:20:10: 20:11, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:20:13: 20:14, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(43: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:21:9: 21:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:21:10: 21:11, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:21:13: 21:14, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(47: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:22:9: 22:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:22:10: 22:11, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:22:13: 22:14, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(51: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:23:9: 23:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:23:10: 23:11, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:23:13: 23:14, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } } }] } }], guard: None, body: Hair(expr(55: true)) }, Arm { patterns: [Pattern { ty: (Example, Example), span: issue-33567.rs:24:9: 24:10, kind: Wild }], guard: None, body: Hair(expr(57: false)) }] } })
DEBUG:rustc_mir::build::expr::as_lvalue: expr_as_lvalue(block=bb0, expr=Expr { ty: (Example, Example), temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:11: 16:21, kind: Scope { extent: CodeExtent(13/Misc(25)), value: Mirror(Expr { ty: (Example, Example), temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:11: 16:21, kind: Tuple { fields: [Hair(expr(26: ex1)), Hair(expr(27: ex2))] } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(13/Misc(25)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(13/Misc(25)))
DEBUG:rustc_mir::build::expr::as_lvalue: expr_as_lvalue(block=bb0, expr=Expr { ty: (Example, Example), temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:11: 16:21, kind: Tuple { fields: [Hair(expr(26: ex1)), Hair(expr(27: ex2))] } })
DEBUG:rustc_mir::build::expr::as_temp: expr_as_temp(block=bb0, expr=Expr { ty: (Example, Example), temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:11: 16:21, kind: Tuple { fields: [Hair(expr(26: ex1)), Hair(expr(27: ex2))] } })
DEBUG:rustc_mir::build::misc: temp: created temp tmp0 with type (Example, Example)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=tmp0, block=bb0, expr=Expr { ty: (Example, Example), temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:11: 16:21, kind: Tuple { fields: [Hair(expr(26: ex1)), Hair(expr(27: ex2))] } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb0, expr=Expr { ty: (Example, Example), temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:11: 16:21, kind: Tuple { fields: [Hair(expr(26: ex1)), Hair(expr(27: ex2))] } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:12: 16:15, kind: Scope { extent: CodeExtent(14/Misc(26)), value: Mirror(Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:12: 16:15, kind: VarRef { id: 16 } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(14/Misc(26)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(14/Misc(26)))
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:12: 16:15, kind: VarRef { id: 16 } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Lvalue for=VarRef { id: 16 }
DEBUG:rustc_mir::build::expr::as_temp: expr_as_temp(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:12: 16:15, kind: VarRef { id: 16 } })
DEBUG:rustc_mir::build::misc: temp: created temp tmp1 with type Example
DEBUG:rustc_mir::build::expr::as_lvalue: expr_as_lvalue(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:12: 16:15, kind: VarRef { id: 16 } })
DEBUG:rustc_mir::build::cfg: push(bb0, tmp1 = var0)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(14/Misc(26)), bb0)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(14/Misc(26)) block=bb0
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:17: 16:20, kind: Scope { extent: CodeExtent(15/Misc(27)), value: Mirror(Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:17: 16:20, kind: VarRef { id: 19 } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(15/Misc(27)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(15/Misc(27)))
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:17: 16:20, kind: VarRef { id: 19 } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Lvalue for=VarRef { id: 19 }
DEBUG:rustc_mir::build::expr::as_temp: expr_as_temp(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:17: 16:20, kind: VarRef { id: 19 } })
DEBUG:rustc_mir::build::misc: temp: created temp tmp2 with type Example
DEBUG:rustc_mir::build::expr::as_lvalue: expr_as_lvalue(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:16:17: 16:20, kind: VarRef { id: 19 } })
DEBUG:rustc_mir::build::cfg: push(bb0, tmp2 = var1)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(15/Misc(27)), bb0)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(15/Misc(27)) block=bb0
DEBUG:rustc_mir::build::cfg: push(bb0, tmp0 = (tmp1, tmp2))
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(13/Misc(25)), bb0)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(13/Misc(25)) block=bb0
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(19/DestructionScope(31)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(24/DestructionScope(35)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(29/DestructionScope(39)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(34/DestructionScope(43)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(39/DestructionScope(47)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(44/DestructionScope(51)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(49/DestructionScope(55)))
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(52/DestructionScope(57)))
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb0, candidates=[Candidate { span: issue-33567.rs:17:9: 17:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:17:9: 17:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:17:10: 17:11, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:17:13: 17:14, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 0 }, Candidate { span: issue-33567.rs:18:9: 18:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:18:9: 18:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:18:10: 18:11, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:18:13: 18:14, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 1 }, Candidate { span: issue-33567.rs:19:9: 19:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:19:9: 19:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:19:10: 19:11, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:19:13: 19:14, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 2 }, Candidate { span: issue-33567.rs:20:9: 20:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:20:9: 20:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:20:10: 20:11, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:20:13: 20:14, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 3 }, Candidate { span: issue-33567.rs:21:9: 21:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:21:9: 21:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:21:10: 21:11, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:21:13: 21:14, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 4 }, Candidate { span: issue-33567.rs:22:9: 22:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:22:9: 22:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:22:10: 22:11, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:22:13: 22:14, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 5 }, Candidate { span: issue-33567.rs:23:9: 23:15, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:23:9: 23:15, kind: Leaf { subpatterns: [FieldPattern { field: Field(0), pattern: Pattern { ty: Example, span: issue-33567.rs:23:10: 23:11, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } } }, FieldPattern { field: Field(1), pattern: Pattern { ty: Example, span: issue-33567.rs:23:13: 23:14, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } } }] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 6 }, Candidate { span: issue-33567.rs:24:9: 24:10, match_pairs: [MatchPair { lvalue: tmp0, pattern: Pattern { ty: (Example, Example), span: issue-33567.rs:24:9: 24:10, kind: Wild }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 7 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:17:10: 17:11, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.0: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:17:10: 17:11, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb9, candidates=[Candidate { span: issue-33567.rs:17:9: 17:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:17:13: 17:14, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 0 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:17:13: 17:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:17:13: 17:14, kind: Variant { adt_def: Example, variant_index: 0, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb16, candidates=[Candidate { span: issue-33567.rs:17:9: 17:15, match_pairs: [], bindings: [], guard: None, arm_index: 0 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb16, candidate=Candidate { span: issue-33567.rs:17:9: 17:15, match_pairs: [], bindings: [], guard: None, arm_index: 0 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb16, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb17, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb18, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb19, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb20, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb21, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb22, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb10, candidates=[Candidate { span: issue-33567.rs:18:9: 18:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:18:13: 18:14, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 1 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:18:13: 18:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:18:13: 18:14, kind: Variant { adt_def: Example, variant_index: 1, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb23, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb24, candidates=[Candidate { span: issue-33567.rs:18:9: 18:15, match_pairs: [], bindings: [], guard: None, arm_index: 1 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb24, candidate=Candidate { span: issue-33567.rs:18:9: 18:15, match_pairs: [], bindings: [], guard: None, arm_index: 1 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb24, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb25, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb26, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb27, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb28, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb29, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb11, candidates=[Candidate { span: issue-33567.rs:19:9: 19:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:19:13: 19:14, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 2 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:19:13: 19:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:19:13: 19:14, kind: Variant { adt_def: Example, variant_index: 2, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb30, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb31, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb32, candidates=[Candidate { span: issue-33567.rs:19:9: 19:15, match_pairs: [], bindings: [], guard: None, arm_index: 2 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb32, candidate=Candidate { span: issue-33567.rs:19:9: 19:15, match_pairs: [], bindings: [], guard: None, arm_index: 2 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb32, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb33, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb34, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb35, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb36, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb12, candidates=[Candidate { span: issue-33567.rs:20:9: 20:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:20:13: 20:14, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 3 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:20:13: 20:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:20:13: 20:14, kind: Variant { adt_def: Example, variant_index: 3, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb37, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb38, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb39, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb40, candidates=[Candidate { span: issue-33567.rs:20:9: 20:15, match_pairs: [], bindings: [], guard: None, arm_index: 3 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb40, candidate=Candidate { span: issue-33567.rs:20:9: 20:15, match_pairs: [], bindings: [], guard: None, arm_index: 3 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb40, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb41, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb42, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb43, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb13, candidates=[Candidate { span: issue-33567.rs:21:9: 21:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:21:13: 21:14, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 4 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:21:13: 21:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:21:13: 21:14, kind: Variant { adt_def: Example, variant_index: 4, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb44, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb45, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb46, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb47, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb48, candidates=[Candidate { span: issue-33567.rs:21:9: 21:15, match_pairs: [], bindings: [], guard: None, arm_index: 4 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb48, candidate=Candidate { span: issue-33567.rs:21:9: 21:15, match_pairs: [], bindings: [], guard: None, arm_index: 4 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb48, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb49, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb50, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb14, candidates=[Candidate { span: issue-33567.rs:22:9: 22:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:22:13: 22:14, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 5 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:22:13: 22:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:22:13: 22:14, kind: Variant { adt_def: Example, variant_index: 5, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb51, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb52, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb53, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb54, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb55, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb56, candidates=[Candidate { span: issue-33567.rs:22:9: 22:15, match_pairs: [], bindings: [], guard: None, arm_index: 5 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb56, candidate=Candidate { span: issue-33567.rs:22:9: 22:15, match_pairs: [], bindings: [], guard: None, arm_index: 5 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb56, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb57, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb15, candidates=[Candidate { span: issue-33567.rs:23:9: 23:15, match_pairs: [MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:23:13: 23:14, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } }, slice_len_checked: false }], bindings: [], guard: None, arm_index: 6 }])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: match_candidates: test=Test { span: issue-33567.rs:23:13: 23:14, kind: Switch { adt_def: Example } } match_pair=MatchPair { lvalue: (tmp0.1: Example), pattern: Pattern { ty: Example, span: issue-33567.rs:23:13: 23:14, kind: Variant { adt_def: Example, variant_index: 6, subpatterns: [] } }, slice_len_checked: false }
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb58, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb59, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb60, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb61, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb62, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb63, candidates=[])
DEBUG:rustc_mir::build::matches: match_candidates: 0 candidates fully matched
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb64, candidates=[Candidate { span: issue-33567.rs:23:9: 23:15, match_pairs: [], bindings: [], guard: None, arm_index: 6 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb64, candidate=Candidate { span: issue-33567.rs:23:9: 23:15, match_pairs: [], bindings: [], guard: None, arm_index: 6 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb64, bindings=[])
DEBUG:rustc_mir::build::matches: matched_candidate(span=issue-33567.rs:16:5: 25:6, block=bb65, candidates=[Candidate { span: issue-33567.rs:24:9: 24:10, match_pairs: [], bindings: [], guard: None, arm_index: 7 }])
DEBUG:rustc_mir::build::matches: match_candidates: 1 candidates fully matched
DEBUG:rustc_mir::build::matches: bind_and_guard_matched_candidate(block=bb65, candidate=Candidate { span: issue-33567.rs:24:9: 24:10, match_pairs: [], bindings: [], guard: None, arm_index: 7 })
DEBUG:rustc_mir::build::matches: bind_matched_candidate(block=bb65, bindings=[])
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb1, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:17:19: 17:23, kind: Scope { extent: CodeExtent(20/Misc(31)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:17:19: 17:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(20/Misc(31)), block=bb1)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(20/Misc(31)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb1, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:17:19: 17:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb1, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:17:19: 17:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb1, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:17:19: 17:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb1, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(20/Misc(31)), bb1)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(20/Misc(31)) block=bb1
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(19/DestructionScope(31)), bb1)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb2, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:18:19: 18:23, kind: Scope { extent: CodeExtent(25/Misc(35)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:18:19: 18:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(25/Misc(35)), block=bb2)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(25/Misc(35)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb2, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:18:19: 18:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb2, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:18:19: 18:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb2, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:18:19: 18:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb2, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(25/Misc(35)), bb2)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(25/Misc(35)) block=bb2
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(24/DestructionScope(35)), bb2)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb3, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:19:19: 19:23, kind: Scope { extent: CodeExtent(30/Misc(39)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:19:19: 19:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(30/Misc(39)), block=bb3)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(30/Misc(39)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb3, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:19:19: 19:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb3, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:19:19: 19:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb3, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:19:19: 19:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb3, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(30/Misc(39)), bb3)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(30/Misc(39)) block=bb3
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(29/DestructionScope(39)), bb3)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb4, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:20:19: 20:23, kind: Scope { extent: CodeExtent(35/Misc(43)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:20:19: 20:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(35/Misc(43)), block=bb4)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(35/Misc(43)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb4, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:20:19: 20:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb4, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:20:19: 20:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb4, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:20:19: 20:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb4, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(35/Misc(43)), bb4)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(35/Misc(43)) block=bb4
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(34/DestructionScope(43)), bb4)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb5, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:21:19: 21:23, kind: Scope { extent: CodeExtent(40/Misc(47)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:21:19: 21:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(40/Misc(47)), block=bb5)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(40/Misc(47)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb5, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:21:19: 21:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb5, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:21:19: 21:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb5, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:21:19: 21:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb5, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(40/Misc(47)), bb5)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(40/Misc(47)) block=bb5
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(39/DestructionScope(47)), bb5)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb6, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:22:19: 22:23, kind: Scope { extent: CodeExtent(45/Misc(51)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:22:19: 22:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(45/Misc(51)), block=bb6)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(45/Misc(51)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb6, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:22:19: 22:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb6, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:22:19: 22:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb6, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:22:19: 22:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb6, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(45/Misc(51)), bb6)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(45/Misc(51)) block=bb6
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(44/DestructionScope(51)), bb6)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb7, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:23:19: 23:23, kind: Scope { extent: CodeExtent(50/Misc(55)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:23:19: 23:23, kind: Literal { literal: const true } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(50/Misc(55)), block=bb7)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(50/Misc(55)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb7, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:23:19: 23:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb7, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:23:19: 23:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb7, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:23:19: 23:23, kind: Literal { literal: const true } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const true }
DEBUG:rustc_mir::build::cfg: push(bb7, return = const true)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(50/Misc(55)), bb7)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(50/Misc(55)) block=bb7
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(49/DestructionScope(55)), bb7)
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb8, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:24:14: 24:19, kind: Scope { extent: CodeExtent(53/Misc(57)), value: Mirror(Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:24:14: 24:19, kind: Literal { literal: const false } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(53/Misc(57)), block=bb8)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(53/Misc(57)))
DEBUG:rustc_mir::build::expr::into: into_expr(destination=return, block=bb8, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:24:14: 24:19, kind: Literal { literal: const false } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb8, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:24:14: 24:19, kind: Literal { literal: const false } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb8, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(11/Misc(23))), span: issue-33567.rs:24:14: 24:19, kind: Literal { literal: const false } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: const false }
DEBUG:rustc_mir::build::cfg: push(bb8, return = const false)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(53/Misc(57)), bb8)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(53/Misc(57)) block=bb8
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(52/DestructionScope(57)), bb8)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(12/Misc(24)), bb66)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(12/Misc(24)) block=bb66
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(11/Misc(23)), bb66)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(11/Misc(23)) block=bb66
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(7/ParameterScope { fn_id: 14, body_id: 23 }), bb66)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(7/ParameterScope { fn_id: 14, body_id: 23 }) block=bb66
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(6/CallSiteScope { fn_id: 14, body_id: 23 }), bb67)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(6/CallSiteScope { fn_id: 14, body_id: 23 }) block=bb67
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(55/CallSiteScope { fn_id: 58, body_id: 60 }), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(55/CallSiteScope { fn_id: 58, body_id: 60 }))
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(56/ParameterScope { fn_id: 58, body_id: 60 }), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(56/ParameterScope { fn_id: 58, body_id: 60 }))
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(58/Misc(60)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(58/Misc(60)))
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(60/Misc(61)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(60/Misc(61)))
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(61/Misc(62)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(61/Misc(62)))
DEBUG:rustc_mir::build::misc: temp: created temp tmp0 with type bool
DEBUG:rustc_mir::build::expr::into: into_expr(destination=tmp0, block=bb0, expr=Expr { ty: bool, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:5: 29:18, kind: Call { ty: fn(Example, Example) -> bool {compare}, fun: Hair(expr(63: compare)), args: [Hair(expr(64: A)), Hair(expr(65: A))] } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: fn(Example, Example) -> bool {compare}, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:5: 29:12, kind: Scope { extent: CodeExtent(64/Misc(63)), value: Mirror(Expr { ty: fn(Example, Example) -> bool {compare}, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:5: 29:12, kind: Literal { literal: compare } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(64/Misc(63)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(64/Misc(63)))
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: fn(Example, Example) -> bool {compare}, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:5: 29:12, kind: Literal { literal: compare } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Constant for=Literal { literal: compare }
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(64/Misc(63)), bb0)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(64/Misc(63)) block=bb0
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:13: 29:14, kind: Scope { extent: CodeExtent(62/Misc(64)), value: Mirror(Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:13: 29:14, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(62/Misc(64)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(62/Misc(64)))
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:13: 29:14, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Rvalue(AsRvalue) for=Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None }
DEBUG:rustc_mir::build::expr::as_temp: expr_as_temp(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:13: 29:14, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::misc: temp: created temp tmp1 with type Example
DEBUG:rustc_mir::build::expr::into: into_expr(destination=tmp1, block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:13: 29:14, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:13: 29:14, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::cfg: push(bb0, tmp1 = Example::A)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(62/Misc(64)), bb0)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(62/Misc(64)) block=bb0
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:16: 29:17, kind: Scope { extent: CodeExtent(63/Misc(65)), value: Mirror(Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:16: 29:17, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } }) } })
DEBUG:rustc_mir::build::scope: in_scope(extent=CodeExtent(63/Misc(65)), block=bb0)
DEBUG:rustc_mir::build::scope: push_scope(CodeExtent(63/Misc(65)))
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:16: 29:17, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::expr::as_operand: expr_as_operand: category=Rvalue(AsRvalue) for=Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None }
DEBUG:rustc_mir::build::expr::as_temp: expr_as_temp(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:16: 29:17, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::misc: temp: created temp tmp2 with type Example
DEBUG:rustc_mir::build::expr::into: into_expr(destination=tmp2, block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:16: 29:17, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::expr::as_rvalue: expr_as_rvalue(block=bb0, expr=Expr { ty: Example, temp_lifetime: Some(CodeExtent(60/Misc(61))), span: issue-33567.rs:29:16: 29:17, kind: Adt { adt_def: Example, variant_index: 0, substs: Substs[types=[[];[];[]], regions=[[];[];[]]], fields: [], base: None } })
DEBUG:rustc_mir::build::cfg: push(bb0, tmp2 = Example::A)
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(63/Misc(65)), bb0)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(63/Misc(65)) block=bb0
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(61/Misc(62)), bb1)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(61/Misc(62)) block=bb1
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(60/Misc(61)), bb1)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(60/Misc(61)) block=bb1
DEBUG:rustc_mir::build::cfg: push(bb1, return = ())
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(58/Misc(60)), bb1)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(58/Misc(60)) block=bb1
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(56/ParameterScope { fn_id: 58, body_id: 60 }), bb1)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(56/ParameterScope { fn_id: 58, body_id: 60 }) block=bb1
DEBUG:rustc_mir::build::scope: pop_scope(CodeExtent(55/CallSiteScope { fn_id: 58, body_id: 60 }), bb2)
DEBUG:rustc_mir::build::scope: in_scope: exiting extent=CodeExtent(55/CallSiteScope { fn_id: 58, body_id: 60 }) block=bb2
